/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package IMS.view;

import IMS.controller.InventoryController;
import IMS.domain.Inventory;
import RM.controller.UnitController;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Heinrich
 */
public class InventoryPendingUi extends javax.swing.JFrame {
    private InventoryPendingAddUi inventoryPendingAddUi;
    private ArrayList<Inventory> arrInventory;
    private InventoryUi inventoryUi;
    private InventoryController inventoryController;
    /**
     * Creates new form InventoryPendingUi
     */
    InventoryPendingUi(InventoryUi inventoryUi) {
        initComponents();
        this.inventoryUi = inventoryUi;
        inventoryController = new InventoryController();
        inventoryPendingAddUi = new InventoryPendingAddUi(this, inventoryController);
        initTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonNew = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonDelivered = new javax.swing.JButton();

        jScrollPane1.setViewportView(jTable1);

        jButtonNew.setText("New Order");
        jButtonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete Order");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonDelivered.setText("Delivered");
        jButtonDelivered.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeliveredActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonNew, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDelete, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButtonDelivered, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDelete)
                        .addGap(200, 200, 200)
                        .addComponent(jButtonDelivered))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewActionPerformed
        // TODO add your handling code here:
        inventoryPendingAddUi.setVisible(true);
    }//GEN-LAST:event_jButtonNewActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        inventoryController.deleteInventoryPending(arrInventory.get(jTable1.getSelectedRow()).getItemNumber());
        initTable();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonDeliveredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeliveredActionPerformed
        // TODO add your handling code here:
       
        try {
            String roastDate = JOptionPane.showInputDialog("Roast Date? Format: (YYYY-MM-DD)");
            Inventory inventory = arrInventory.get(jTable1.getSelectedRow());
            Date date = new SimpleDateFormat("yyyy-MM-d", Locale.ENGLISH).parse(roastDate);
            inventory.setRoastDate(new java.sql.Date(date.getTime()));
            inventoryController.addPendingHist(inventory);
            inventoryController.deleteInventoryPending(inventory.getItemNumber());
            UnitController unitController = new UnitController();
            inventory = unitController.loadPostUnit(inventory);
            inventoryController.moveToInventory(inventory);
            initTable();
            inventoryUi.initTable();
            
        } catch (ParseException ex) {
            Logger.getLogger(InventoryPendingUi.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        
    }//GEN-LAST:event_jButtonDeliveredActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonDelivered;
    private javax.swing.JButton jButtonNew;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
    public void initTable(){
       
        arrInventory = inventoryController.loadInventoryPending();
        String[] col = {"Name", "Quantity", "Unit", "Total Price", "Order date"};
        Object[][] cell = new String[arrInventory.size()][col.length];
        for(int i = 0; i < arrInventory.size(); i++){
            cell[i][0] = arrInventory.get(i).getName();
            cell[i][1] = String.valueOf(arrInventory.get(i).getQuantity());
            cell[i][2] = arrInventory.get(i).getUnit();
            cell[i][3] = String.valueOf(arrInventory.get(i).getTotalPrice());
            cell[i][4] = arrInventory.get(i).getDate().toString();
        }
        
        jTable1.setModel(new DefaultTableModel(cell, col));
    }
}
