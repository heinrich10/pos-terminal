/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package IMS.view;

import IMS.controller.IngredientController;
import IMS.controller.InventoryController;
import IMS.domain.IngredientCode;
import IMS.domain.Inventory;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Heinrich
 */
public class InventoryLinkUi extends javax.swing.JFrame {
    private IngredientCode ingredientCode;
    private IngredientController ingredientCodeController;
    private ArrayList<Inventory> arrInventory;
    private Inventory[] InventoryLinkList;
    /**
     * Creates new form InventoryLinkUi
     */
    public InventoryLinkUi(IngredientController ingredientCodeController) {
        this.ingredientCodeController = ingredientCodeController;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonAccept = new javax.swing.JButton();
        jTextFieldIngredientCode = new javax.swing.JTextField();
        jTextFieldInventoryA = new javax.swing.JTextField();
        jTextFieldInventoryB = new javax.swing.JTextField();
        jButtonAddA = new javax.swing.JButton();
        jButtonAddB = new javax.swing.JButton();
        jButtonRemoveA = new javax.swing.JButton();
        jButtonRemoveB = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButtonAccept.setText("Accept");
        jButtonAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAcceptActionPerformed(evt);
            }
        });

        jButtonAddA.setText("Add");
        jButtonAddA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddAActionPerformed(evt);
            }
        });

        jButtonAddB.setText("Add");
        jButtonAddB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddBActionPerformed(evt);
            }
        });

        jButtonRemoveA.setText("Remove");
        jButtonRemoveA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveAActionPerformed(evt);
            }
        });

        jButtonRemoveB.setText("Remove");
        jButtonRemoveB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveBActionPerformed(evt);
            }
        });

        jLabel1.setText("Primary Queue");

        jLabel2.setText("Secondary Queue");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextFieldInventoryB, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldInventoryA)
                            .addComponent(jTextFieldIngredientCode, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonAccept))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonAddB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonRemoveB))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButtonAddA)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonRemoveA)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldIngredientCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAccept))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldInventoryA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAddA)
                    .addComponent(jButtonRemoveA))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldInventoryB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAddB)
                    .addComponent(jButtonRemoveB))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRemoveAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveAActionPerformed
        // TODO add your handling code here:
        InventoryLinkList[0] = null;
        jTextFieldInventoryA.setText("");
    }//GEN-LAST:event_jButtonRemoveAActionPerformed

    private void jButtonRemoveBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveBActionPerformed
        // TODO add your handling code here:
        InventoryLinkList[1] = null;
        jTextFieldInventoryB.setText("");
    }//GEN-LAST:event_jButtonRemoveBActionPerformed

    private void jButtonAddAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddAActionPerformed
        // TODO add your handling code here:
        InventoryLinkList[0] = arrInventory.get(jTable1.getSelectedRow());
        jTextFieldInventoryA.setText(InventoryLinkList[0].getItemNumber() + " " + InventoryLinkList[0].getName());
        
    }//GEN-LAST:event_jButtonAddAActionPerformed

    private void jButtonAddBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddBActionPerformed
        // TODO add your handling code here:
        InventoryLinkList[1] = arrInventory.get(jTable1.getSelectedRow());
        jTextFieldInventoryB.setText(InventoryLinkList[1].getItemNumber() + " " + InventoryLinkList[1].getName());
    }//GEN-LAST:event_jButtonAddBActionPerformed

    private void jButtonAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAcceptActionPerformed
        // TODO add your handling code here:
        HashMap map = new HashMap();
        map.put("1", ingredientCode.getCode());
        
        if(InventoryLinkList[0] != null){
             map.put("2",InventoryLinkList[0].getItemNumber());
        } else {
            map.put("2", null);
        }
        
        if(InventoryLinkList[1] != null){
             map.put("3",InventoryLinkList[1].getItemNumber());
        } else {
            map.put("3", null);
        }
        
        ingredientCodeController.saveInventoryLink(map);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonAcceptActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAccept;
    private javax.swing.JButton jButtonAddA;
    private javax.swing.JButton jButtonAddB;
    private javax.swing.JButton jButtonRemoveA;
    private javax.swing.JButton jButtonRemoveB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldIngredientCode;
    private javax.swing.JTextField jTextFieldInventoryA;
    private javax.swing.JTextField jTextFieldInventoryB;
    // End of variables declaration//GEN-END:variables

    private void initTable() {
        
        InventoryController ic = new InventoryController();
        arrInventory = ic.loadInventory(ingredientCode.getCode());
        String[] col = {"Name", "Quantity", "Unit", "Unit Price", "Item Number"};
        Object[][] cell = new String[arrInventory.size()][col.length];
        for(int i = 0; i < arrInventory.size(); i++){
            cell[i][0] = arrInventory.get(i).getName();
            cell[i][1] = String.valueOf(arrInventory.get(i).getQuantity());
            cell[i][2] = arrInventory.get(i).getUnit();
            cell[i][3] = String.valueOf(arrInventory.get(i).getUnitPrice());
            cell[i][4] = String.valueOf(arrInventory.get(i).getItemNumber());
        }
        jTable1.setModel(new DefaultTableModel(cell, col));
       
    }
    
    public void setIngredient(IngredientCode ingredientCode){
        
        jTextFieldInventoryA.setText("");
        jTextFieldInventoryB.setText("");
        
        this.ingredientCode = ingredientCode;
        
        jTextFieldIngredientCode.setText(ingredientCode.getBrand() + " " + ingredientCode.getName());
        
        InventoryLinkList = ingredientCodeController.loadIngredientLink(ingredientCode.getCode());
        
        if(InventoryLinkList[0] != null){
            jTextFieldInventoryA.setText(String.valueOf(InventoryLinkList[0].getItemNumber()) + " " + InventoryLinkList[0].getName());
        }
        
        if(InventoryLinkList[1] != null){
            jTextFieldInventoryB.setText(String.valueOf(InventoryLinkList[1].getItemNumber()) + " " + InventoryLinkList[1].getName());
        }
        initTable();
     }
     
}
